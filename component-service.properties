server.port=${PORT:8002}

# define the destination to which the input MessageChannel should be bound
#spring.cloud.stream.bindings.input.destination = reservations

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
#spring.cloud.stream.bindings.input.group = reservations

# ensure that the Q is durable
#spring.cloud.stream.bindings.input.durableSubscription = true

# jdbc
spring.datasource.dataSourceClassName: org.postgresql.ds.PGSimpleDataSource
spring.datasource.databaseName: demo
spring.datasource.serverName: localhost
spring.datasource.username: postgresor
spring.datasource.password: postgresor

#spring.jpa.properties.hibernate.default_schema: public
spring.jpa.properties.hibernate.multiTenancy=SCHEMA
spring.jpa.properties.hibernate.tenant_identifier_resolver=com.ymc.core.multitenant.TenantIdResolver
spring.jpa.properties.hibernate.multi_tenant_connection_provider=com.ymc.core.multitenant.SchemaBasedMultiTenantConnectionProvider
spring.jpa.properties.hibernate.connection.driver_class=org.postgresql.Driver
spring.jpa.properties.hibernate.connection.url=jdbc:postgresql://127.0.0.1:5432/demo
spring.jpa.properties.hibernate.connection.username=postgresor
spring.jpa.properties.hibernate.connection.password=postgresor
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.show_sql=true
